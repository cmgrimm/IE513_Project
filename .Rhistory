dpois(0,0)
seq(0,10)
p_X
p_x
dpois(0,2)
dpois(2)
dpois(2,2)
p_x[2+1]
p_x[3+1]
dpois(3,2)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
ceiling(5.5)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
fun <- function(x) log(x)
View(fun)
integrate(fun,0,1)
fun <- function(x) log(x/4)+1
integrate(fun,0,1)
integrate(fun,0,50)
s <- 20
s <- 20
t <- 50
integrate(fun,s,t)
fun <- function(x) x
s <- 20
t <- 50
integrate(fun,0,1)
require(stats)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
l_function <- function(t) log(t)
integrate(l_function,0,10)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
class(fun)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
fun
l_function
l_function[1]
l_function[]
l_function()
l_function
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
?integrate
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 100, subdivisions=2000,stop.on.error=F)
integrate(l_function, lower = 0, upper = 100, subdivisions=200,stop.on.error=F)
integrate(l_function, lower = 0, upper = 100, subdivisions=100)
integrate(l_function, lower = 0, upper = 100, subdivisions=50)
integrate(l_function, lower = 0, upper = 10, subdivisions=50)
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 10, subdivisions=50)
integrate(l_function, lower = 0, upper = 10)
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 10)
integrate(l_function, lower = 0, upper = 10,subdivisions = 1)
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 10)
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 1)
l_function <- function(x) (1/x)
x <- integrate(l_function, lower = 0, upper = 1)
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 1)
l_function <- function(x) (1/x)
integrate(l_function, lower = 0, upper = 1)
l_function <- function(x) {1/x}
integrate(l_function, lower = 0, upper = 1)
integrate(l_function, lower = -1, upper = 1)
integrate(Vectorize(l_function),0,1)
Vectorize(l_function)
l_function
?Vectorize
l_function <- function(x) {x}
integrate(l_function, lower = 0, upper = 1)
l_function <- function(x) {1/x}
integrate(l_function, lower = 0, upper = 1)
try(integrate(l_function, lower = 0, upper = 1))
l_function <- function(x) {x}
integrate(l_function, lower = 0, upper = 1)
Vectorize(l_function)
Vectorize(l_function())
Vectorize(l_function
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
fun <- function(t) log(t)
fun <- function(t) log(t)
integrate(fun,0,1)
integrate(fun,0,10)
integrate(fun(t),0,10)
integrate(function(x)1/x,0,10)
plot(1/x)
plot(x = 1:100,y=1/(1:100))
integrate(function(x)1/x,1,10)
integrate(function(x)1/x,.00000001,10)
integrate(function(x)1/x,.0000000000000000000000000000000000000000000000000001,10)
integrate(function(x)1/x,.00000000000000000000000001,10)
integrate(function(x)1/x,.000000000000000000000000001,10)
integrate(function(x)1/x,.0000000000000000000000000001,10)
integrate(function(x)1/x,.000000000000000000000000000000001,10)
integrate(function(x)1/x,.0000000000000000000000000000001,10)
integrate(function(x)1/x,.000000000000000000000000000001,10)
integrate(function(x)1/x,.00000000000000000000000000001,10)
.00000000000000000000000000001
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
fun <- function(t) (sin(t/4)+2)
integrate(fun,0,1)
integrate(fun,1e-26,1)
integrate(fun,1e-20,1)
integrate(fun,1e-25,1)
integrate(fun,1e-26,1)
integrate(fun,1e-26,1,subdivisions = 1000)
integrate(fun,1e-26,1,subdivisions = 100)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
fun
paste(fun)
fun$
parse(fun)
sprintf(fun)
sprintf('hi')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
as.character(fun)
as.character(fun())
fun
t <- fun
t
paste(t)
t
as.character(t)
paste0("$\int_{0}^{",t_instance(),"}")
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
t <- 5
paste0("$\\int_{0}^{",t,"}$")
withMathJax(helpText(
paste0("$\int_{0}^{",t,"}$")
))
paste0("$\int_{0}^{",t,"}$")
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
integrate(fun)
integrate(fun,0,1)
x <- integrate(fun,0,1)
x <- integrate(fun,0,10)
x <- integrate(fun,0,100)
x <- integrate(fun,0,1000)
x <- integrate(fun,0,1000,subdivisions = 100)
x <- integrate(fun,0,1000,subdivisions = 1000)
x <- integrate(fun,0,1000,subdivisions = 10000)
x <- integrate(fun,0,100,subdivisions = 10000)
x <- integrate(fun,0,inf,subdivisions = 10000)
x <- integrate(fun,0,'inf',subdivisions = 10000)
x <- integrate(x,0,'inf',subdivisions = 10000)
x <- integrate(function(x)x,0,'inf',subdivisions = 10000)
x <- integrate(function(x)1/x,0,'inf',subdivisions = 10000)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
x <- 40 60
x <- '40 60'
strsplit(x," ")
strsplit(x," ")[1]
strsplit(x," ")[[1]][1]
strsplit(x," ")[[1]][2]
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
value <- round(integrate(l_calculation, lower = t, upper = s, subdivisions = s*50)$value,2)
t <- 1
s <- 5
value <- round(integrate(l_calculation, lower = t, upper = s, subdivisions = s*50)$value,2)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
?integrate
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
view(integrate)
integrate
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
100L
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
integrate(f = l_calculation, lower = t, upper = s, subdivisions = 100)
integrate(f = l_calculation, lower = t, upper = s, subdivisions = 100)$value
integrate(f = l_calculation, lower = t, upper = s, subdivisions = 1000)$value
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
shiny::runApp()
runApp()
runApp()
#simulation function for a non homogeneous poisson process
nhpp_sim <- function(start,end,trials,l_func){
k=1 #index for getting arrival times
Customers <- NA #total arrival count from t to s
arrivalTimes <- NA #time of arrival
j=1
while(j<trials+1){#Runs defined number of simulations
arrivalvalue=0
arrivals <- NA #array of arrivals
i = 1 #used for indexing
t <- start
s <- end
while (t < s) {
#lambda to be changed between options
l_value <- l_func(t) #lambda value
arrivalvalue<-rexp(1,rate=l_value)
#Jumps by incriments of .01 seconds, if the arrival occured in that time frame, document it
if(arrivalvalue > .01) t=t+.01 else t=t+arrivalvalue
if(arrivalvalue > .01){
arrivals[i] <- NA
} else {
arrivals[i] <- t
if(j==1){
arrivalTimes[k]<-t
k<-k+1
}
}
i <- i +1
}#End while s<t
#Count of number of arrivals in duration
N=length(arrivals[!is.na(arrivals)])
Customers[j] <- N
j=j+1 #Move to next simulation (of 100)
}#End while j<101
return(Customers)
}
shinyServer(function(input, output) {
t_intervals <- reactive({ seq(1,input$t_max,1) }) #time periods, max set by user
t_instance <- reactive({ input$t_range[1] }) #time instance selected
s_instance <- reactive({ input$t_range[2] }) #time instance selected
#set the function of lambda
l_calculation <- reactive({
switch(input$l_fun,
"sin(t/4)+2" = function(t) (sin(t/4)+2),
"(1/t)+1" = function(t) (1/t)+1,
"log(t)" = function(t) log(t),
"custom" = function(t) eval(parse(text = input$l_fun_custom))
)#end switch
})#end l_calculation
#calculate lambda over time
l_values <- reactive({
l_function <- l_calculation()
l_function(t_intervals())
})
#instance lambda at s
l_instance_s <- reactive({
l_function <- l_calculation()
l_function(s_instance()+1)#add one to get correct t, R has array base 1 and our array starts at t=0
})
#instance lambda at t
l_instance <- reactive({
l_function <- l_calculation()
l_function(t_instance()+1)#add one to get correct t, R has array base 1 and our array starts at t=0
})
#get lambda function as string
eq <- reactive({
if(input$l_fun != "custom") {
input$l_fun
} else {
input$l_fun_custom
}
})
mean_value <- reactive({
t <- t_instance()
s <- s_instance()
value <- round(integrate(f = l_calculation(), lower = t, upper = s, subdivisions = 1000)$value,2)
value
})
#distribution from t to s given lambda(t)
p_dist <- reactive({
max <- mean_value() + 30
x <- rep(NA,max)
f <- function(t,s,n) {
((integrate(f=l_calculation(),lower = t,upper = s)$value)^n) *
exp(-integrate(f=l_calculation(),lower = t,upper = s)$value) /
factorial(n)
}
for(i in 1:max){
x[i] <- f(t_instance(),s_instance(),i)
}
x
})
# Outputs -----------------------------------------------------------------
#render s_instance slider, max value set by user
output$t_range_ui <- renderUI({
sliderInput("t_range",
"Select a Time Interval",
min = 1,
max = input$t_max,
value = c(1, (input$t_max-1)),
step = 1)
})#end renderUI slider input
#render highchart of lambda over time given selected lambda function
output$l_fun_hc <- renderHighchart({
hc <- highchart() %>%
hc_xAxis(plotLines = list(
list(
label = list(text = paste0(c("&lambda;: ", round(l_instance(),digits = 2)),collapse=""),
useHTML = T
),
color = "#FF0000",
width = 2,
value = t_instance()
),
list(
label = list(text = paste0(c("&lambda;: ", round(l_instance_s(),digits = 2)),collapse=""),
useHTML = T
),
color = "#FF0000",
width = 2,
value = s_instance()
)
)
) %>%
hc_add_series(name = '&lambda;',
data = round(l_values(),2),
marker=list(enabled=F),
useHTML = T) %>%
hc_title(text = "&lambda; as a Function of Time",
align = 'left',
useHTML = T) %>%
hc_add_theme(hc_theme_tufte()) %>%
hc_tooltip(headerFormat = 't: <b>{point.key}</b><table>',
pointFormat = '<tr><td>{series.name}:  </td><td style="text-align: right"><b>{point.y}</b></td></tr></table>',
useHTML = T
) %>%
hc_plotOptions(series=list(animation=F))
})#end highchart
#render poisson density function given an instance lambda
output$p_dist_range_hc <- renderHighchart({
hc <- highchart() %>%
hc_xAxis(plotLines = list(
list(
label = list(text = paste0(c("&mu;: ", round(mean_value(),digits = 2)),collapse=""),
useHTML = T
),
color = "#FF0000",
width = 2,
value = mean_value()
)
)) %>%
hc_add_series(name = "P(X = x)",
data = round(p_dist(),2),
marker=list(enabled=F),
type = "areaspline") %>%
hc_yAxis(min = 0, max = 0.5) %>%
hc_title(text = paste0(c("P(N(",t_instance(),",",s_instance(),") = x) when &lambda;(t) = ",eq()),collapse="",sep=""),
align = "left",
useHTML = T) %>%
hc_add_theme(hc_theme_tufte()) %>%
hc_tooltip(headerFormat = 'x: <b>{point.x}</b>',
pointFormat = '<table><tr><td>P(X = x): <b>{point.y}</b></td></tr></table>',
useHTML = T)
})#end highchart
output$integrals <- renderUI({
t <- t_instance()
s <- s_instance()
eq <- eq()
value <- mean_value()
withMathJax(
sprintf(
paste0(
"$$E[N(",t,",",s,")]=\\int_{",t,"}^{",s,"}[",eq,"]dt = ",value,"$$ $$P(N(",t,",",s,") = n) = \\frac{(\\int_{",t,"}^{",s,"}[",eq,"]dt)^{n}*e^{\\int_{",t,"}^{",s,"}[",eq,"]dt}}{n!}$$"
)
)
)
})
})#end server
nhpp_sim
l_calculation
l_calculation <- function(t) sin(t/4)+2
nhpp(6,18,l_calculation,100)
nhpp_sim(6,18,l_calculation,100)
nhpp_sim(6,18,100,l_calculation)
x <- nhpp_sim(6,18,1000,l_calculation)
mean(x)
hist(x)
norm(x)
h = hist(x)
h$density = h$counts/sum(h$counts)*100
plot(h,freq=FALSE)
plot(h,freq = F)
plot(h)
plot(h,freq = F)
plot(h/100,freq = F)
h = hist(x)
h$density = h$counts/sum(h$counts)
plot(h,freq=FALSE)
plot(h,freq = F,xlim = c(0,50))
runApp()
y <- 0.99988
str(y)
y <- as.character(y)
y
substr(y,1,2)
substr(y,1,5)
runApp()
install.packages("shinyjs")
library(shinyjs)
runApp()
x <- nhpp_sim(1,5,100,l_calculation)
x
paste(x)
paste(x,collapse = ",")
runApp()
?hist
runApp()
frequency(x)
count(x)
table(x)
as.data.frame(table(x))
x2 <- as.data.frame(table(x))
nums <- 1:max(x)
data.frame(x = nums)
x2 <- data.frame(x = nums)
merge(x2,table(x))
merge(x2,table(x),all = T)
x2 <- merge(x2,table(x),all = T)
x2
x2[is.na(x2)]
x2[is.na(x2)] <- 0
x2
x2[2]
runApp()
hc <- highchart() %>%
hc_xAxis(categories = 1:max(x)) %>%
hc_add_series(name = "Simulated Data",
data = x2$Freq) %>%
hc_chart(type = "column")
hc <- highchart() %>%
hc_xAxis(categories = 1:max(x)) %>%
hc_add_series(name = "Simulated Data",
data = x2$Freq) %>%
hc_chart(type = "column")
hc
runApp()
table(x)
x2 = 1"18"
x2 = 1:18
merge(x2,table(x))
merge(x2,table(x),all=T)
runApp()
merge(x2,table(x),all=T)
merge(x2,table(x),all=T)[2]
runApp()
l_calculation <- function(t) sin(t/4) + 2
x <- nhpp_sim(1,24,100,l_calculation)
x2 <- 1:max(x)
x3 <- merge(x2,table(x),all=T)
x3[is.na(x3)] <- 0
x3$Freq
View(x3)
sum(x3$Freq)
hc <- highchart() %>%
hc_add_series(name = "Simulated Data",
data = x3$Freq) %>%
hc_chart(type = "column")
hc
runApp()
seq(1,max(x))
runApp()
View(nhpp_sim)
x
max(x)
x <- seq(1,66)
sim_list<-nhpp_sim(1,24,100,l_calculation)
x <- seq(1,max(sim_list))
x2 <- merge(x,table(sim_list),all = T)
x2[is.na(x2)] <- 0
x2$Freq
x <- seq(1,max(sim_list))
max(sim_list)
x2 <- merge(x,table(sim_list),all = T)
x2 <- data.frame(x = x)
x3 <- merge(x2,table(sim_list),all=T)
table(sim_list)
as.data.frame(table(sim_list))
x <- data.frame(sim_list = seq(1,max(sim_list)))
x2 <- merge(x,table(sim_list),all = T)
x2[is.na(x2)] <- 0
x2$Freq
runApp()
runApp()
shiny::runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
f <- function(t,s,n) {
((integrate(f=l_calculation(),lower = t,upper = s)$value)^n) *
exp(-integrate(f=l_calculation(),lower = t,upper = s)$value) /
factorial(n)
}
f
sapply(seq(from=1,to=10,by=.1),FUN = f(1,15))
sapply(seq(from=1,to=10,by=.1),function(x)  f(1,15,x))
seq(from=1,to=10,by=.1)
max = 40
x <- seq(0,max,0.1)
f <- function(t,s,n) {
((integrate(f=l_calculation(),lower = t,upper = s)$value)^n) *
exp(-integrate(f=l_calculation(),lower = t,upper = s)$value) /
factorial(n)
}
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
x <- a:100
x <- 1:100
x[1:]
x[1::]
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
rgba(115, 115, 115, 0.75)
runApp('//my.files.iastate.edu/Users/cmgrimm/Desktop/GitHub/IE513_Project')
